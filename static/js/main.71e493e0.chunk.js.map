{"version":3,"sources":["components/drawer.jsx","components/app-bar-top.jsx","pages/home.jsx","firebase/base.js","components/fab.jsx","pages/weather-station.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DrawerComponent","props","SwipeableDrawer","anchor","open","isOpen","onClose","toggleDrawer","onOpen","List","name","path","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","top","bottom","AppBarTop","classes","useState","setIsOpen","status","event","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","aria-haspopup","links","icon","fontSize","description","marginTop","card","minWidth","bullet","display","margin","transform","pos","marginBottom","Home","history","useHistory","Container","maxWidth","Grid","container","item","xs","justify","Card","CardContent","gutterBottom","component","CardActions","Button","push","handleOnClick","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","base","Rebase","createClass","fab","right","extendedIcon","withRouter","Fab","goBack","WeatherStation","state","data","isLoading","this","ref","listenTo","context","then","setState","removeBinding","CircularProgress","temperature","humidity","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.71e493e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport {\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport InboxIconTwoTone from \"@material-ui/icons/InboxTwoTone\";\r\nimport MailIconTwoTone from \"@material-ui/icons/MailTwoTone\";\r\n\r\nexport default function DrawerComponent(props) {\r\n  const list = () => (\r\n    <List>\r\n      {[{name: \"Weather Station\", path: \"/weather-station\"}].map((text, index) => (\r\n        <ListItem button key={text}>\r\n          <ListItemIcon>\r\n            {index % 2 === 0 ? <InboxIconTwoTone /> : <MailIconTwoTone />}\r\n          </ListItemIcon>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SwipeableDrawer\r\n        anchor={\"right\"}\r\n        open={props.isOpen}\r\n        onClose={props.toggleDrawer(false)}\r\n        onOpen={props.toggleDrawer(true)}\r\n      >\r\n        {list()}\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIconTwoTone from \"@material-ui/icons/MenuTwoTone\";\r\nimport SettingsIconTwoTone from \"@material-ui/icons/SettingsTwoTone\";\r\n\r\nimport DrawerComponent from \"./drawer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n}));\r\n\r\nconst AppBarTop = () => {\r\n  const classes = useStyles();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDrawer = (status) => (event) => {\r\n    setIsOpen(status);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <DrawerComponent isOpen={isOpen} toggleDrawer={toggleDrawer} />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleDrawer(true)}\r\n          >\r\n            <MenuIconTwoTone />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Riizv\r\n          </Typography>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"settings\"\r\n            // aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            // onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n          >\r\n            <SettingsIconTwoTone />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBarTop;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport CloudTwoTone from \"@material-ui/icons/CloudTwoTone\";\r\nimport PlayArrowTwoTone from \"@material-ui/icons/PlayArrowTwoTone\";\r\nimport PlaceTwoTone from \"@material-ui/icons/PlaceTwoTone\";\r\n\r\nconst links = [\r\n  {\r\n    path: \"/weather-station\",\r\n    icon: <CloudTwoTone fontSize=\"small\" />,\r\n    title: \"Weather Station\",\r\n    description: \"Check temperature and humidity\",\r\n  },\r\n  {\r\n    path: \"/position\",\r\n    icon: <PlaceTwoTone fontSize=\"small\" />,\r\n    title: \"Position\",\r\n    description: \"Check your position\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 5,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleOnClick = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container className={classes.root} spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={3}>\r\n            {links.map(({ path, icon, title, description }) => (\r\n              <Grid key={path} item>\r\n                <Card className={classes.root}>\r\n                  <CardContent>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                    >\r\n                      {path}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      {icon} {title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      beta\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      {description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button onClick={() => handleOnClick(path)}>\r\n                      More <PlayArrowTwoTone />\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import firebase from \"firebase\";\r\nimport Rebase from \"re-base\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB8Zb2nxAQ9hZjDlYggpYVK7VRY8Nlz1jc\",\r\n  authDomain: \"ardu-c44a3.firebaseapp.com\",\r\n  databaseURL: \"https://ardu-c44a3.firebaseio.com\",\r\n  projectId: \"ardu-c44a3\",\r\n  storageBucket: \"ardu-c44a3.appspot.com\",\r\n  messagingSenderId: \"526504033931\",\r\n  appId: \"1:526504033931:web:45b7cc2d8d701d39f5de8e\",\r\n  measurementId: \"G-C8YXZMZKKY\",\r\n});\r\n\r\nconst db = firebaseApp.database();\r\nconst base = Rebase.createClass(db);\r\n\r\nexport default base;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ArrowBackIconTwoTone from \"@material-ui/icons/ArrowBackTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst FloatingBackButton = ({ history }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fab\r\n      aria-label=\"Back\"\r\n      color=\"primary\"\r\n      variant=\"extended\"\r\n      className={classes.fab}\r\n      onClick={() => history.goBack()}\r\n    >\r\n      <ArrowBackIconTwoTone className={classes.extendedIcon} /> Back\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default withRouter(FloatingBackButton);\r\n","import React from \"react\";\r\n\r\nimport base from \"../firebase/base\";\r\n\r\nimport { FaTemperatureHigh } from \"react-icons/fa\";\r\nimport { FiCloudDrizzle } from \"react-icons/fi\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport FloatingBackButton from \"../components/fab\";\r\n\r\nclass WeatherStation extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: \"\",\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ref = base.listenTo(\"weather-station\", {\r\n      context: this,\r\n      then(data) {\r\n        // console.log(data);\r\n        this.setState({\r\n          data,\r\n          isLoading: false,\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <div>\r\n            <p>\r\n              <FaTemperatureHigh /> Temperature:{\" \"}\r\n              <b>{this.state.data.temperature}</b>\r\n            </p>\r\n            <p>\r\n              <FiCloudDrizzle /> Humidity: <b>{this.state.data.humidity}</b>\r\n            </p>\r\n          </div>\r\n        )}\r\n        <FloatingBackButton />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default WeatherStation;\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport AppBarTop from \"./components/app-bar-top\";\n// import LabelBottomNavigation from \"./components/bottom-navigation\";\n\nimport Home from \"./pages/home\";\nimport WeatherStation from \"./pages/weather-station\";\n\nfunction App() {\n  return (\n    <Router>\n      <AppBarTop />\n      <div>\n        <Switch>\n          <Route path=\"/weather-station\">\n            <WeatherStation />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n      {/* <LabelBottomNavigation /> */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}