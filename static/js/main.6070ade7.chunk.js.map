{"version":3,"sources":["config/pages.jsx","components/drawer.jsx","components/bottom-navigation.jsx","pages/home.jsx","firebase/base.js","components/chart.jsx","pages/weather-station.jsx","config/theme.js","App.jsx","serviceWorker.js","index.js"],"names":["pages","name","path","icon","DrawerComponent","props","history","useHistory","SwipeableDrawer","anchor","open","isOpen","onClose","toggleDrawer","onOpen","List","map","ListItem","button","key","onClick","push","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","LabelBottomNavigation","classes","useState","setIsOpen","pathname","useLocation","status","event","AppBar","color","className","Toolbar","IconButton","edge","Zoom","in","timeout","Fab","aria-label","links","fontSize","title","description","root","marginTop","card","minWidth","bullet","display","transform","pos","marginBottom","Home","Container","maxWidth","Divider","Grid","container","spacing","item","xs","justify","Card","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","handleOnClick","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","base","Rebase","createClass","createData","time","el","data","Chart","value","useTheme","updateHistory","newElement","shift","Date","getSeconds","useEffect","dataKey","stroke","palette","text","secondary","type","WeatherStation","state","isLoading","this","ref","listenTo","context","then","setState","removeBinding","CircularProgress","progress","sm","cardHeight","temperature","LinearProgress","humidity","React","Component","withStyles","height","paddingBottom","createMuiTheme","overrides","main","purple","green","App","ThemeProvider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6070ade7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport OpacityTwoToneIcon from \"@material-ui/icons/OpacityTwoTone\";\r\nimport { FaTemperatureHigh } from \"react-icons/fa\";\r\n\r\nexport const pages = [\r\n  {\r\n    name: \"Weather Station\",\r\n    path: \"/weather-station\",\r\n    icon: <OpacityTwoToneIcon />,\r\n  },\r\n  {\r\n    name: \"Position\",\r\n    path: \"/position\",\r\n    icon: <FaTemperatureHigh />,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport {\r\n  List,\r\n  // Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport MailIconTwoTone from \"@material-ui/icons/MailTwoTone\";\r\n\r\nimport { pages } from \"../config/pages.jsx\";\r\nexport default function DrawerComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const list = () => (\r\n    <List>\r\n      {pages.map(({ name, path, icon }) => (\r\n        <ListItem\r\n          button\r\n          key={path}\r\n          onClick={() => {\r\n            history.push(path);\r\n            props.toggleDrawer(false);\r\n          }}\r\n        >\r\n          <ListItemIcon>{icon}</ListItemIcon>\r\n          <ListItemText primary={name} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SwipeableDrawer\r\n        anchor={\"bottom\"}\r\n        open={props.isOpen}\r\n        onClose={props.toggleDrawer(false)}\r\n        onOpen={props.toggleDrawer(true)}\r\n      >\r\n        {list()}\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n}\r\n\r\nDrawerComponent.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nimport DrawerComponent from \"./drawer\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nimport ArrowBackIconTwoTone from \"@material-ui/icons/ArrowBackTwoTone\";\r\nimport SettingsIconTwoTone from \"@material-ui/icons/SettingsTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nconst LabelBottomNavigation = () => {\r\n  const classes = useStyles();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const history = useHistory();\r\n  let { pathname } = useLocation();\r\n\r\n  const toggleDrawer = (status) => (event) => {\r\n    setIsOpen(status);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n      <DrawerComponent isOpen={isOpen} toggleDrawer={toggleDrawer} />\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\">\r\n          <SettingsIconTwoTone />\r\n        </IconButton>\r\n        <Zoom in={pathname !== \"/\"} timeout={300}>\r\n          <Fab\r\n            color=\"secondary\"\r\n            aria-label=\"add\"\r\n            className={classes.fabButton}\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            <ArrowBackIconTwoTone />\r\n          </Fab>\r\n        </Zoom>\r\n        <div className={classes.grow} />\r\n        <IconButton\r\n          edge=\"end\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={toggleDrawer(true)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default LabelBottomNavigation;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nimport CloudTwoTone from \"@material-ui/icons/CloudTwoTone\";\r\nimport PlayArrowTwoTone from \"@material-ui/icons/PlayArrowTwoTone\";\r\nimport PlaceTwoTone from \"@material-ui/icons/PlaceTwoTone\";\r\n\r\nconst links = [\r\n  {\r\n    path: \"/weather-station\",\r\n    icon: <CloudTwoTone fontSize=\"small\" />,\r\n    title: \"Weather Station\",\r\n    description: \"Check temperature and humidity\",\r\n  },\r\n  {\r\n    path: \"/position\",\r\n    icon: <PlaceTwoTone fontSize=\"small\" />,\r\n    title: \"Position\",\r\n    description: \"Check your position\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 5,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleOnClick = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <h1>ExLog</h1>\r\n      <Divider />\r\n      <Grid container className={classes.root} spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={3}>\r\n            {links.map(({ path, icon, title, description }) => (\r\n              <Grid key={path} item>\r\n                <Card className={classes.root}>\r\n                  <CardContent>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                    >\r\n                      {path}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      {icon} {title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      beta\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      {description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button onClick={() => handleOnClick(path)}>\r\n                      More <PlayArrowTwoTone />\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import firebase from \"firebase\";\r\nimport Rebase from \"re-base\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB8Zb2nxAQ9hZjDlYggpYVK7VRY8Nlz1jc\",\r\n  authDomain: \"ardu-c44a3.firebaseapp.com\",\r\n  databaseURL: \"https://ardu-c44a3.firebaseio.com\",\r\n  projectId: \"ardu-c44a3\",\r\n  storageBucket: \"ardu-c44a3.appspot.com\",\r\n  messagingSenderId: \"526504033931\",\r\n  appId: \"1:526504033931:web:45b7cc2d8d701d39f5de8e\",\r\n  measurementId: \"G-C8YXZMZKKY\",\r\n});\r\n\r\nconst db = firebaseApp.database();\r\nconst base = Rebase.createClass(db);\r\n\r\nexport default base;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nconst createData = (time, el) => ({ time, el });\r\n\r\nconst data = [\r\n  createData(\"00:00\", 0),\r\n  createData(\"03:00\", 0),\r\n  createData(\"06:00\", 0),\r\n  createData(\"09:00\", 0),\r\n  createData(\"12:00\", 0),\r\n  createData(\"15:00\", 0),\r\n  createData(\"18:00\", 0),\r\n  createData(\"21:00\", 0),\r\n  createData(\"24:00\", 0),\r\n];\r\n\r\nconst Chart = ({ value }) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  const updateHistory = (newElement) => {\r\n    data.shift();\r\n    data.push(createData(new Date().getSeconds(), newElement));\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateHistory(value);\r\n    return () => {\r\n      updateHistory(value);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <ResponsiveContainer>\r\n      <LineChart data={data} className={classes.root}>\r\n        <XAxis dataKey=\"time\" />\r\n        <YAxis stroke={theme.palette.text.secondary}></YAxis>\r\n        <Line type=\"monotone\" dataKey=\"el\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport base from \"../firebase/base\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport OpacityTwoToneIcon from \"@material-ui/icons/OpacityTwoTone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { FaTemperatureHigh } from \"react-icons/fa\";\r\n\r\nimport Chart from \"../components/chart\";\r\n\r\nconst styles = {\r\n  root: {},\r\n  progress: {\r\n    position: \"absolute\",\r\n    top: \"49%\",\r\n    left: \"49%\",\r\n  },\r\n  card: {},\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {},\r\n  cardHeight: {\r\n    height: 120,\r\n    paddingBottom: 60,\r\n  },\r\n};\r\nclass WeatherStation extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: \"\",\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ref = base.listenTo(\"weather-station\", {\r\n      context: this,\r\n      then(data) {\r\n        this.setState({\r\n          data,\r\n          isLoading: false,\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        {this.state.isLoading ? (\r\n          <CircularProgress className={classes.progress} />\r\n        ) : (\r\n          <Container maxWidth=\"md\">\r\n            <Grid container className={classes.root} spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Card className={classes.root}>\r\n                  <CardContent className={classes.cardHeight}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      <FaTemperatureHigh /> Temperature{\" \"}\r\n                      {this.state.data.temperature}\r\n                    </Typography>\r\n                      <Chart value={this.state.data.temperature} />\r\n                  </CardContent>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={this.state.data.temperature}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n              {/*  */}\r\n              <Grid item xs={12} sm={6}>\r\n                <Card className={classes.root}>\r\n                  <CardContent className={classes.cardHeight}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      <OpacityTwoToneIcon /> Humidity {this.state.data.humidity}\r\n                    </Typography>\r\n                    <Chart value={this.state.data.temperature} />\r\n                  </CardContent>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={this.state.data.humidity}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(WeatherStation);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nexport const theme = createMuiTheme({\r\n  overrides: {\r\n    palette: {\r\n      primary: {\r\n        main: purple[500],\r\n      },\r\n      secondary: {\r\n        main: green[500],\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport \"./App.scss\";\n\nimport LabelBottomNavigation from \"./components/bottom-navigation\";\n\nimport Home from \"./pages/home\";\nimport WeatherStation from \"./pages/weather-station\";\n\nimport { theme } from \"./config/theme\";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/weather-station\">\n              <WeatherStation />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n        <LabelBottomNavigation />\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}